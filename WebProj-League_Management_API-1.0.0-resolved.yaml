---
openapi: 3.0.0
info:
  title: Superliga Management
  description: An API to recieve data about SUPERLIGA 2020/2021 season.
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/WebProj/League_Management_API/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: player
  description: Get league's players information
- name: team
  description: Get league's teams information
- name: coach
  description: Get league's coaches information
- name: league
  description: Get league information
- name: match
  description: Manage matches information
- name: user
  description: Manage users of the system
paths:
  /players:
    get:
      tags:
      - player
      summary: Get all players information
      operationId: getPlayer
      parameters:
      - name: amountLimit
        in: query
        description: The amount of teams to be returned in the current request
        required: false
        style: form
        explode: true
        schema:
          maximum: 30
          minimum: 0
          type: integer
          example: 20
      - name: offset
        in: query
        description: The pagination marker. Offset to begin current respone from
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 200
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        "400":
          description: Invalid parameter value
        "500":
          description: Internal server error
  /players/findByName:
    get:
      tags:
      - player
      summary: Finds players by name
      description: Recieve players by full or partial name queries
      operationId: findPlayerByName
      parameters:
      - name: name
        in: query
        description: name to be searched
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Ronaldo
      - name: amountLimit
        in: query
        description: The amount of teams to be returned in the current request
        required: false
        style: form
        explode: true
        schema:
          maximum: 30
          minimum: 0
          type: integer
          example: 20
      - name: offset
        in: query
        description: The pagination marker. Offset to begin current respone from
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 200
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        "500":
          description: Internal server error
  /players/{playerId}:
    get:
      tags:
      - player
      summary: Find a player by ID
      description: Returns a single player
      operationId: getPlayerById
      parameters:
      - name: playerId
        in: path
        description: ID of player to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        "400":
          description: Invalid ID supplied
        "404":
          description: Player not found
        "500":
          description: Internal server error
  /coaches:
    get:
      tags:
      - coach
      summary: Get all coachs information
      operationId: getCoach
      parameters:
      - name: amountLimit
        in: query
        description: The amount of teams to be returned in the current request
        required: false
        style: form
        explode: true
        schema:
          maximum: 30
          minimum: 0
          type: integer
          example: 20
      - name: offset
        in: query
        description: The pagination marker. Offset to begin current respone from
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 200
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coach'
        "400":
          description: Invalid parameter value
        "500":
          description: Internal server error
  /coaches/findByName:
    get:
      tags:
      - coach
      summary: Finds coachs by name
      description: Recieve coaches by full or partial name queries
      operationId: findCoachByName
      parameters:
      - name: name
        in: query
        description: name to be searched
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Jurgen Klopp
      - name: amountLimit
        in: query
        description: The amount of teams to be returned in the current request
        required: false
        style: form
        explode: true
        schema:
          maximum: 30
          minimum: 0
          type: integer
          example: 20
      - name: offset
        in: query
        description: The pagination marker. Offset to begin current respone from
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 200
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coach'
        "500":
          description: Internal server error
  /coaches/{coachId}:
    get:
      tags:
      - coach
      summary: Find a coach by ID
      description: Returns a single coach
      operationId: getCoachById
      parameters:
      - name: coachId
        in: path
        description: ID of coach to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coach'
        "400":
          description: Invalid ID supplied
        "404":
          description: Coach not found
        "500":
          description: Internal server error
  /teams:
    get:
      tags:
      - team
      summary: Get all teams information
      operationId: getTeam
      parameters:
      - name: amountLimit
        in: query
        description: The amount of teams to be returned in the current request
        required: false
        style: form
        explode: true
        schema:
          maximum: 30
          minimum: 0
          type: integer
          example: 20
      - name: offset
        in: query
        description: The pagination marker. Offset to begin current respone from
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 200
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        "400":
          description: Invalid parameter value
        "500":
          description: Internal server error
  /teams/findByName:
    get:
      tags:
      - team
      summary: Finds teams by name
      description: Recieve teams by full or partial name queries
      operationId: findTeamByName
      parameters:
      - name: name
        in: query
        description: name to be searched
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Juventus
      - name: amountLimit
        in: query
        description: The amount of teams to be returned in the current request
        required: false
        style: form
        explode: true
        schema:
          maximum: 30
          minimum: 0
          type: integer
          example: 20
      - name: offset
        in: query
        description: The pagination marker. Offset to begin current respone from
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 200
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        "500":
          description: Internal server error
  /teams/{teamId}:
    get:
      tags:
      - team
      summary: Find a team by ID
      description: Returns a single team
      operationId: getTeamById
      parameters:
      - name: teamId
        in: path
        description: ID of team to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        "400":
          description: Invalid ID supplied
        "404":
          description: Team not found
        "500":
          description: Internal server error
  /league:
    get:
      tags:
      - league
      summary: Get league information
      operationId: getLeague
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
        "500":
          description: Internal server error
  /users:
    put:
      tags:
      - user
      summary: Update user details
      description: This can only be done by the logged in user.
      operationId: updateUser
      requestBody:
        description: Updated user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: successful operation
        "403":
          description: Forbidden operation
        "404":
          description: User not found
        "500":
          description: Internal server error
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: successful operation
        "500":
          description: Internal server error
  /users/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The username for login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
  /users/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        "200":
          description: successful operation
  /users/addFavourite:
    put:
      tags:
      - user
      summary: Add a favorite player/team/match to an existing user
      operationId: addFavourite
      parameters:
      - name: user_id
        in: query
        description: user to add the favourite item to
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: favourite_id
        in: query
        description: favourite item ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: fav_type
        in: query
        description: what kind of favourite item
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - player
          - team
          - match
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid ID supplied
        "403":
          description: Forbidden operation
        "404":
          description: Items not found
        "500":
          description: Internal server error
  /matches:
    get:
      tags:
      - match
      summary: Get all matches information
      operationId: getMatch
      parameters:
      - name: amountLimit
        in: query
        description: The amount of matches to be returned in the current request
        required: false
        style: form
        explode: true
        schema:
          maximum: 30
          minimum: 0
          type: integer
          example: 20
      - name: offset
        in: query
        description: The pagination marker. Offset to begin current respone from
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 200
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        "400":
          description: Invalid parameter value
        "500":
          description: Internal server error
  /matches/{matchId}:
    get:
      tags:
      - match
      summary: Find a match by ID
      description: Returns a single match
      operationId: getMatchById
      parameters:
      - name: matchId
        in: path
        description: ID of match to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        "400":
          description: Invalid ID supplied
        "404":
          description: Coach not found
        "500":
          description: Internal server error
  /matches/updateScores:
    put:
      tags:
      - match
      summary: Update matches scores to an existing match
      operationId: updateScores
      parameters:
      - name: match_id
        in: query
        description: match to update
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: home_goals
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: away_goals
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid ID supplied
        "403":
          description: Forbidden operation
        "404":
          description: Match not found
        "500":
          description: Internal server error
  /matches/addEvent:
    put:
      tags:
      - match
      summary: Add an event to an existing match
      operationId: addEvent
      parameters:
      - name: match_id
        in: query
        description: match to add the event item to
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Created event object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid ID supplied
        "403":
          description: Forbidden operation
        "404":
          description: Items not found
        "500":
          description: Internal server error
components:
  schemas:
    User:
      required:
      - email
      - first_name
      - image_path
      - last_name
      - password
      - user_type
      - username
      type: object
      properties:
        user_id:
          type: integer
          format: int64
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        country:
          type: string
        email:
          type: string
        password:
          type: string
        image_path:
          type: string
        user_type:
          type: string
          description: user type to set personalized UIs and permissions
          enum:
          - fan
          - player
          - coach
          - representative
        fav_players:
          type: array
          description: player IDs
          items:
            type: integer
            format: int64
        fav_teams:
          type: array
          description: player IDs
          items:
            type: integer
            format: int64
        fav_matches:
          type: array
          description: player IDs
          items:
            type: integer
            format: int64
    Player:
      required:
      - birthcountry
      - birthdate
      - common_name
      - height
      - image_path
      - name
      - nationality
      - position
      - team_id
      - weight
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Ronaldo
        common_name:
          type: string
          example: C. Ronaldo
        team_id:
          type: integer
          format: int64
        image_path:
          type: string
        nationality:
          type: string
          example: Scotland
        birthcountry:
          type: string
          example: Greece
        birthdate:
          type: string
          example: 05/12/91
        height:
          type: string
          example: 170 cm
        weight:
          type: string
          example: 80 kg
        position:
          type: integer
          format: int64
    Coach:
      required:
      - birthcountry
      - birthdate
      - common_name
      - height
      - image_path
      - name
      - nationality
      - position
      - team_id
      - weight
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Ronaldo
        common_name:
          type: string
          example: C. Ronaldo
        team_id:
          type: integer
          format: int64
        image_path:
          type: string
        nationality:
          type: string
          example: Scotland
        birthcountry:
          type: string
          example: Greece
        birthdate:
          type: string
          example: 05/12/91
        height:
          type: string
          example: 170 cm
        weight:
          type: string
          example: 80 kg
    Team:
      type: object
      properties:
        team_id:
          type: integer
          format: int64
        logo_path:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        coach:
          type: array
          items:
            $ref: '#/components/schemas/Coach'
        matches:
          type: array
          items:
            $ref: '#/components/schemas/Match'
    League:
      type: object
      properties:
        league_id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        country_id:
          type: integer
          format: int64
        logo_path:
          type: string
        current_season_id:
          type: integer
          format: int64
        current_stage_id:
          type: integer
          format: int64
        current_round_id:
          type: integer
          format: int64
    Match:
      type: object
      properties:
        match_id:
          type: integer
          format: int64
        datetime:
          type: string
        home_team_id:
          type: integer
          format: int64
        away_team_id:
          type: integer
          format: int64
        venue_id:
          type: integer
          format: int64
        home_goals:
          type: integer
          format: int64
        away_goals:
          type: integer
          format: int64
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    Event:
      type: object
      properties:
        datetime:
          type: string
        game_minute:
          type: integer
          format: int64
        player_id:
          type: integer
          format: int64
        team_id:
          type: integer
          format: int64
        details:
          type: string
          enum:
          - goal
          - offside
          - foul
          - red_card
          - yellow_card
          - injury
          - substitution
  requestBodies:
    Player:
      description: Player object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Player'
      required: true
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      required: true
